name: Deploy

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: true
          ssh-key: ${{ secrets.BOTSU_PRIVATE_SSH_KEY }}
      - uses: digitalocean/action-doctl@v2
        if: github.ref == 'refs/heads/testdigitalocean'
        with:
          token: ${{ secrets.DO_WRITE_API_KEY }}

      # - name: Run tests
      #   run: |
      #     echo "DATABASE_URL=postgres://postgres:postgres@localhost:$POSTGRES_PORT/postgres" >> .env
      #     # cd web
      #     # cargo test --target wasm32-unknown-unknown --release --verbose
      #     cd native
      #     cargo run --bin migrator --release
      #     cargo test --release --verbose
      #   env:
      #     # Fake value for the encryption key for this step, because any branch can run this
      #     BASWS_CLIENT_ENCRYPTION_KEY: "abcdefghijklmnopqrstuvwxzy123456"
      #     POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Build
        uses: docker://khonsulabs/cosmicverge-build:latest
        with:
          entrypoint: /bin/bash
          args: "/entrypoint.sh ${{ secrets.CLIENT_ENCRYPTION_KEY }}"

      - name: Compile sass
        run: |
          sudo npm install -g sass
          sass web/sass/styles.sass web/static/styles.css

      - name: Authenticate with DigitalOcean Registry
        if: github.ref == 'refs/heads/testdigitalocean'
        run: |
          doctl registry login --expiry-seconds 600

      - name: Publish Docker Image
        if: github.ref == 'refs/heads/testdigitalocean'
        run: |
          docker build . -t registry.digitalocean.com/khonsulabs/cosmicverge:sha-$GITHUB_SHA -t registry.digitalocean.com/khonsulabs/cosmicverge:main
          docker push -a registry.digitalocean.com/khonsulabs/cosmicverge

      - name: Update Kubernetes
        if: github.ref == 'refs/heads/testdigitalocean'
        run: |
          doctl kubernetes cluster kubeconfig save $CLUSTER_ID
          kubectl rollout restart deployment/cosmicverge
        env:
          CLUSTER_ID: ${{ secrets.PRODUCTION_CLUSTER_ID }}
